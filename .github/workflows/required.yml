name: Required Tests

on: [push, pull_request]

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: ['32', '33']
    runs-on: ubuntu-latest
    env:
      COPR_REPO: "@pki/master"
    steps:
      - name: Clone the repository
        uses: actions/checkout@v2
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build runner image
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            OS_VERSION=${{ matrix.os }}
            COPR_REPO=${{ env.COPR_REPO }}
            BUILD_OPTS=--with-timestamp --with-commit-id
          tags: ldapjdk-runner
          target: ldapjdk-runner
          outputs: type=docker,dest=/tmp/ldapjdk-runner.tar

      - name: Upload runner image
        uses: actions/upload-artifact@v2
        with:
          name: ldapjdk-runner-${{ matrix.os }}
          path: /tmp/ldapjdk-runner.tar

  test:
    name: Tests
    needs: build
    strategy:
      matrix:
        os: ['32', '33']
    runs-on: ubuntu-latest
    env:
      LDAPJDKDIR: /tmp/workdir/ldapjdk
      CONTAINER: ldapjdk-test
      COPR_REPO: "@pki/master"
    steps:
      - name: Clone the repository
        uses: actions/checkout@v2

      - name: Download runner image
        uses: actions/download-artifact@v2
        with:
          name: ldapjdk-runner-${{ matrix.os }}
          path: /tmp

      - name: Load runner image
        run: docker load --input /tmp/ldapjdk-runner.tar

      - name: Setup required test environment
        run: |
          IMAGE=ldapjdk-runner \
          tests/bin/container-init.sh

      - name: Install dependencies
        run: docker exec -i ${CONTAINER} dnf install -y 389-ds-base

      - name: Create DS instance
        run: docker exec -i ${CONTAINER} ${LDAPJDKDIR}/tests/bin/ds-create.sh

      - name: Run ldapjdk Tests
        run: docker exec -i ${CONTAINER} ${LDAPJDKDIR}/tests/bin/tools-test.sh

      - name: Remove DS instance
        run: docker exec -i ${CONTAINER} ${LDAPJDKDIR}/tests/bin/ds-remove.sh
